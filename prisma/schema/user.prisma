model User {
    id        String     @id @default(uuid()) @db.Uuid
    name      String
    icon      String
    createdAt DateTime   @default(now())
    updatedAt DateTime   @default(now())
    // User と Room の関連付け
    roomUsers RoomUser[]
    // User と Score の関連付け
    scores    Score[]
}

model Room {
    id           String     @id @default(uuid()) @db.Uuid
    name         String
    initialPoint Int
    returnPoint  Int
    bonusPoint   String
    scoreRate    Int
    chipRate     Int
    gameAmount   Int
    createdAt    DateTime   @default(now())
    updatedAt    DateTime   @default(now())
    // Room と RoomUser の関連付け
    roomUsers    RoomUser[]
    // Room と Score の関連付け
    scores       Score[]
}

model RoomUser {
    id        String   @id @default(uuid()) @db.Uuid
    position  Int // 1-4のポジション（player1-4に相当）
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    // 関連付け
    user   User   @relation(fields: [userId], references: [id])
    userId String @db.Uuid
    room   Room   @relation(fields: [roomId], references: [id])
    roomId String @db.Uuid

    // 複合ユニーク制約（同じ部屋で同じポジションは1人まで）
    @@unique([roomId, position])
    // 複合ユニーク制約（同じ部屋に同じユーザーは1人まで）
    @@unique([roomId, userId])
}

model Score {
    id        String   @id @default(uuid()) @db.Uuid
    input     Int
    score     Int
    gameCount Int
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    // 関連付け
    user   User   @relation(fields: [userId], references: [id])
    userId String @db.Uuid
    room   Room   @relation(fields: [roomId], references: [id])
    roomId String @db.Uuid

    @@index([userId, roomId, gameCount]) // パフォーマンス向上のためのインデックス
}
