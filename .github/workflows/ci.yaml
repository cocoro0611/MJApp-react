name: Container CI

on:
  workflow_dispatch:
  push:
    branches:
      - "feature/*"
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Pa55word
          POSTGRES_DB: MJAppDb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create .env file
        run: |
          echo "DATABASE_URL=postgresql://postgres:Pa55word@localhost:5432/MJAppDb?schema=public&sslmode=disable" > .env
          echo "NEXTAUTH_SECRET=test-secret-key" >> .env
          echo "NEXTAUTH_URL=http://localhost:3000" >> .env

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run database migrations
        run: npx prisma migrate deploy

      - name: Run tests
        run: pnpm test:ci

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: my-app:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
